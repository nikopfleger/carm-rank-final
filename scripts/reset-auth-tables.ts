#!/usr/bin/env node

/**
 * üóëÔ∏è Script para limpiar tablas de autenticaci√≥n
 * 
 * Este script limpia todas las tablas relacionadas con autenticaci√≥n
 * para permitir una migraci√≥n limpia a database sessions.
 * 
 * ‚ö†Ô∏è CUIDADO: Esto eliminar√° todos los usuarios y sesiones existentes
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function resetAuthTables() {
    console.log('üóëÔ∏è Limpiando tablas de autenticaci√≥n...\n');

    try {
        // Confirmar antes de proceder
        console.log('‚ö†Ô∏è  ADVERTENCIA: Este script eliminar√°:');
        console.log('   - Todas las sesiones activas');
        console.log('   - Todas las cuentas vinculadas');
        console.log('   - Todos los usuarios');
        console.log('   - Link requests y otros datos de usuarios\n');

        // En un entorno real, aqu√≠ podr√≠as pedir confirmaci√≥n
        // process.stdout.write('¬øContinuar? (y/N): ');

        console.log('üßπ Procediendo con la limpieza...\n');

        // 1. Limpiar en orden (respetando foreign keys)
        console.log('üóëÔ∏è Eliminando sessions...');
        await prisma.session.deleteMany({});

        console.log('üóëÔ∏è Eliminando accounts...');
        await prisma.account.deleteMany({});

        console.log('üóëÔ∏è Eliminando verification tokens...');
        await prisma.verificationToken.deleteMany({});

        console.log('üóëÔ∏è Eliminando user player links...');
        await prisma.userPlayerLink.deleteMany({});

        console.log('üóëÔ∏è Eliminando user player link requests...');
        await prisma.userPlayerLinkRequest.deleteMany({});

        console.log('üóëÔ∏è Eliminando usuarios...');
        await prisma.user.deleteMany({});

        console.log('\n‚úÖ Limpieza completada exitosamente!');
        console.log('\nüí° Pr√≥ximos pasos:');
        console.log('   1. Ejecutar: npm run seed (si tienes seed de usuarios)');
        console.log('   2. O crear usuarios nuevos a trav√©s del sistema de login');

    } catch (error) {
        console.error('‚ùå Error durante la limpieza:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

// Ejecutar la limpieza
resetAuthTables()
    .then(() => {
        console.log('\n‚úÖ Script completado exitosamente');
        process.exit(0);
    })
    .catch((error) => {
        console.error('\n‚ùå Script fall√≥:', error);
        process.exit(1);
    });
