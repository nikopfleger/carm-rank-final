import { hybridImageStorage } from './simplified-image-storage';

// ============================================================================
// LIMPIEZA SIMPLE DE IM√ÅGENES - SOLO BLOB
// ============================================================================

/**
 * Elimina la imagen (si es default, no hace nada).
 * No setea fallback ni toca FS porque la imagen no se usar√° m√°s.
 */
export async function cleanupImage(imageFileName: string, imageUrl?: string): Promise<void> {
    try {
        if (!imageFileName) {
            console.log('‚ÑπÔ∏è No hay imagen que limpiar para este juego');
            return;
        }

        console.log(`üóëÔ∏è Eliminando imagen: ${imageFileName} ${imageUrl ? `(URL: ${imageUrl})` : ''}`);

        const deleted = await hybridImageStorage.deleteImage(imageFileName, imageUrl);

        if (deleted) {
            console.log(`‚úÖ Imagen eliminada exitosamente: ${imageFileName}`);
        } else {
            console.warn(`‚ö†Ô∏è Imagen no encontrada o no eliminable (posible default): ${imageFileName}`);
        }
    } catch (error) {
        console.warn(`‚ö†Ô∏è Error eliminando imagen ${imageFileName}:`, error);
        // No propagamos error para no cortar el flujo
    }
}

/**
 * Limpieza de emergencia ‚Äî no-op (no hay storage local).
 * Dejar por compatibilidad o envolver en feature flag si quer√©s.
 */
export async function emergencyCleanupAllTemp(): Promise<number> {
    console.log('üö® LIMPIEZA DE EMERGENCIA - No hay storage local. No-op.');
    return 1;
}
